{"version":3,"file":"ApiReader.js","sourceRoot":"","sources":["../../../build-scripts-storybook/api/ApiReader.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from \"fs/promises\";\nimport path from \"path\";\n\nexport interface IComponentAPI {\n    name: string;\n    description: string;\n    since?: string;\n    visibility: string;\n    deprecated?: boolean;\n}\n\nexport interface IComponentParsedAPI extends IComponentAPI {\n    fieldName: string;\n}\n\nexport interface IComponentUI5CustomData {\n    parameters?: Record<string, any>;\n    returnValue: Record<string, any>;\n}\n\nexport interface IComponentProperty extends IComponentParsedAPI {\n    type: string;\n    defaultValue: string;\n    readonly: boolean;\n}\n\ninterface IComponentEvent extends IComponentParsedAPI {\n    parameters: Record<string, any>;\n}\n\nexport interface IComponentMethod extends IComponentParsedAPI {\n    parameters: Record<string, any>;\n    returnValue: Record<string, any>;\n    readonly: boolean;\n    type: string;\n}\n\nexport interface IComponentSlot extends IComponentParsedAPI {\n    type: string;\n}\n\nexport interface IComponentData {\n    kind: string;\n    name: string;\n    basename: string;\n    tagname: string;\n    resource: string;\n    module: string;\n    static: boolean;\n    visibility: string;\n    since: string;\n    extends: string;\n    implements: string[];\n    description: string;\n    constructor: {\n        visibility: string;\n    };\n\n    properties: IComponentProperty[];\n    events: IComponentEvent[];\n    methods: IComponentMethod[];\n    slots: IComponentSlot[];\n}\n\ninterface IComponentInfo {\n    package: string;\n    since: string;\n}\n\ninterface IApiJson {\n    symbols: IComponentData[];\n}\n\nexport interface IApiReader {\n    getApi(): Record<string, any>;\n    findApi(componentName: string): IComponentData;\n    findInfo(componentName: string): IComponentInfo;\n    readApiFiles(apiJsonFiles: string[]): Promise<void[]>;\n}\n\nexport class ApiReader implements IApiReader {\n    constructor() {\n        this.api = {};\n    }\n\n    private api: Record<string, IApiJson>;\n\n    public getApi() {\n        return this.api;\n    }\n\n    async readApiFiles(apiJsonFiles: string[]): Promise<void[]> {\n        if (!apiJsonFiles || !apiJsonFiles.length) {\n            throw new Error(\"Api json files are required\");\n        }\n        const promises = apiJsonFiles.map(async (apiJsonFile: string) => {\n            const jsonData = await fs.readFile(apiJsonFile, \"utf8\");\n            const apiJson = JSON.parse(jsonData);\n            // get the package name from the path\n            // ../**/**/main/dist/api.json => main at index -3\n            const packageName = apiJsonFile.split(path.sep).at(-3);\n            if (packageName) {\n                this.api[packageName] = apiJson;\n            }\n        });\n\n        return Promise.all(promises);\n    }\n\n    public findApi(componentName: string): IComponentData {\n        if (!componentName) {\n            throw new Error(\"Component name is required\");\n        }\n\n        if (Object.keys(this.api).length === 0) {\n            throw new Error(\"No api files found\");\n        }\n\n        let componentData = {};\n\n        for (const packageName in this.api) {\n            const packageData = this.api[packageName];\n            const symbols = packageData.symbols;\n            const index = symbols.findIndex(\n                (s) => s.basename === componentName || s.name === componentName\n            );\n\n            if (index !== -1) {\n                componentData = symbols[index];\n                break;\n            }\n        }\n\n        return componentData as IComponentData;\n    }\n\n    public findInfo(componentName: string): IComponentInfo {\n        if (!componentName) {\n            throw new Error(\"Component name is required\");\n        }\n\n        if (Object.keys(this.api).length === 0) {\n            throw new Error(\"No api files found\");\n        }\n\n        let componentData = {};\n\n        for (const packageName in this.api) {\n            const packageData = this.api[packageName];\n            const symbols = packageData.symbols;\n            const index = symbols.findIndex(\n                (s) => s.basename === componentName || s.name === componentName\n            );\n\n            if (index !== -1) {\n                componentData = {\n                    package: `@ui5/webcomponents${\n                        packageName !== \"main\" ? `-${packageName}` : \"\"\n                    }`,\n                    since: symbols[index].since,\n                };\n                break;\n            }\n        }\n\n        return componentData as IComponentInfo;\n    }\n}\n"]}