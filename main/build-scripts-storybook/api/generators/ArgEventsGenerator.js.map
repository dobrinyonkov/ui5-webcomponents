{"version":3,"file":"ArgEventsGenerator.js","sourceRoot":"","sources":["../../../../build-scripts-storybook/api/generators/ArgEventsGenerator.ts"],"names":[],"mappings":"AAGA,MAAM,OAAO,kBAAkB;IAA/B;QACW,cAAS,GAAG,QAAQ,CAAC;IAuBhC,CAAC;IArBa,SAAS,CAAC,MAA0B;QAC1C,MAAM,MAAM,GAAwB,EAAE,CAAC;QAEvC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,MAAM,CAAC;SACjB;QAED,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACrB,IAAI,KAAK,CAAC,UAAU,KAAK,QAAQ,EAAE;gBAC/B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;oBACjB,WAAW,EAAE,KAAK,CAAC,WAAW;oBAC9B,KAAK,EAAE;wBACH,QAAQ,EAAE,IAAI,CAAC,SAAS;qBAC3B;iBACJ,CAAC;aAEL;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ","sourcesContent":["import type { IComponentMethod } from \"../ApiReader\";\nimport { InputType as IArgType } from \"@storybook/types\";\n\nexport class ArgEventsGenerator {\n    public fieldName = \"events\";\n\n    protected parseData(events: IComponentMethod[]): Record<string, IArgType> {\n        const result: Record<string, any> = {};\n\n        if (!events) {\n            return result;\n        }\n\n        events.forEach((event) => {\n            if (event.visibility === \"public\") {\n                result[event.name] = {\n                    description: event.description,\n                    table: {\n                        category: this.fieldName,\n                    },\n                };\n\n            }\n        });\n\n        return result;\n    }\n}\n"]}