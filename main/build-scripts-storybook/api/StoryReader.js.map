{"version":3,"file":"StoryReader.js","sourceRoot":"","sources":["../../../build-scripts-storybook/api/StoryReader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,aAAa,CAAC;AAC7B,OAAO,IAAI,MAAM,MAAM,CAAC;AAQxB,MAAM,OAAO,WAAW;IAGpB;QACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,WAAqB;QAC1C,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC/C;QAED,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,SAAiB,EAAE,EAAE;YACzD,MAAM,cAAc,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACnD,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAErD,IAAI,CAAC,WAAW,EAAE;gBACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;aAC/C;YAED,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,cAAc,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAEM,UAAU;QACb,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;IAC9C,CAAC;IAEM,WAAW;QACd,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;CACJ","sourcesContent":["import fs from \"fs/promises\";\nimport path from \"path\";\n\nexport interface IStoryReader {\n    readStories(directories: string[]): Promise<void[]>;\n    getStories(): string[];\n    getPackages(): Record<string, string[]>;\n}\n\nexport class StoryReader implements IStoryReader {\n    private stories: Record<string, string[]>;\n\n    constructor() {\n        this.stories = {};\n    }\n\n    public async readStories(directories: string[]) {\n        if (!directories || !directories.length) {\n            throw new Error(\"Directories are required\");\n        }\n\n        const promises = directories.map(async (directory: string) => {\n            const storiesFolders = await fs.readdir(directory);\n            const packageName = directory.split(path.sep).at(-1);\n\n            if (!packageName) {\n                throw new Error(\"Package name is required\");\n            }\n\n            this.stories[packageName] = storiesFolders;\n        });\n\n        return Promise.all(promises);\n    }\n\n    public getStories() {\n        return Object.values(this.stories).flat();\n    }\n\n    public getPackages() {\n        return this.stories;\n    }\n}\n"]}