{"version":3,"file":"StorybookApiGenerator.js","sourceRoot":"","sources":["../../../build-scripts-storybook/api/StorybookApiGenerator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAM5C,OAAO,EAAE,eAAe,EAAe,MAAM,mBAAmB,CAAC;AAUjE,MAAM,qBAAqB;IAOvB,YACI,SAAS,GAAG,IAAI,SAAS,EAAE,EAC3B,WAAW,GAAG,IAAI,WAAW,EAAE,EAC/B,sBAAsB,GAAG,IAAI,sBAAsB,EAAE,EACrD,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,EAC/C,eAAe,GAAG,IAAI,eAAe,EAAE;QAEvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,QAAQ,CACV,YAAsB,EACtB,YAAsB,EACtB,SAAiB;QAEjB,MAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAChD,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAEjD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAEvE,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzE,MAAM,IAAI,CAAC,mBAAmB,CAAC,aAAa,CACxC,SAAS,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,sBAAsB,CAC9B,CAAC;IACN,CAAC;CACJ;AAED,OAAO,EAAE,qBAAqB,EAAE,CAAC","sourcesContent":["import { ApiReader } from \"./ApiReader\";\nimport { StoryArgTypesGenerator } from \"./StoryArgTypesGenerator\";\nimport { StoryArgTypesWriter } from \"./StoryArgTypesWriter\";\nimport { StoryReader } from \"./StoryReader\";\n\nimport type { IApiReader } from \"./ApiReader\";\nimport type { IStoryArgTypesGenerator } from \"./StoryArgTypesGenerator\";\nimport type { IStoryArgTypesWriter } from \"./StoryArgTypesWriter\";\nimport type { IStoryReader } from \"./StoryReader\";\nimport { DataParserProxy, IDataParser } from \"./DataParserProxy\";\n\ninterface IStorybookApiGenerator {\n    generate(\n        apiJsonFiles: string[],\n        storiesFiles: string[],\n        directory: string\n    ): Promise<void>;\n}\n\nclass StorybookApiGenerator implements IStorybookApiGenerator {\n    private apiReader: IApiReader;\n    private storyReader: IStoryReader;\n    private storyArgTypesGenerator: IStoryArgTypesGenerator;\n    private storyArgTypesWriter: IStoryArgTypesWriter;\n    private dataParserProxy: IDataParser;\n\n    constructor(\n        apiReader = new ApiReader(),\n        storyReader = new StoryReader(),\n        storyArgTypesGenerator = new StoryArgTypesGenerator(),\n        storyArgTypesWriter = new StoryArgTypesWriter(),\n        dataParserProxy = new DataParserProxy()\n    ) {\n        this.apiReader = apiReader;\n        this.storyReader = storyReader;\n        this.storyArgTypesGenerator = storyArgTypesGenerator;\n        this.storyArgTypesWriter = storyArgTypesWriter;\n        this.dataParserProxy = dataParserProxy;\n    }\n\n    async generate(\n        apiJsonFiles: string[],\n        storiesFiles: string[],\n        directory: string\n    ) {\n        await this.apiReader.readApiFiles(apiJsonFiles);\n        await this.storyReader.readStories(storiesFiles);\n\n        const stories = this.storyReader.getStories();\n        const parsedData = this.dataParserProxy.parse(this.apiReader, stories);\n\n        this.storyArgTypesGenerator.generateArgTypes(parsedData, this.apiReader);\n\n        await this.storyArgTypesWriter.writeArgTypes(\n            directory,\n            this.apiReader,\n            this.storyReader,\n            this.storyArgTypesGenerator\n        );\n    }\n}\n\nexport { StorybookApiGenerator };\n"]}